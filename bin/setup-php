#!/bin/bash

set -euo pipefail

. $(dirname $(dirname $(realpath $BASH_SOURCE)))/app/helpers/init

env=${1:-}
mode=${2:-reload}
service=php$PHPVER-fpm.service

env_status() {
    if [[ -f /etc/php/$PHPVER/apache2/conf.d/mod_php-development.ini ]]; then
        log -n "🛠️  PHP environment: "
        echo development
    elif [[ -f /etc/php/$PHPVER/apache2/conf.d/mod_php-production.ini ]]; then
        log -n "🚀 PHP  environment: "
        echo production
    else
        log 1 "❌ Unknown PHP environment"
    fi
    [ "$env" = "status" ] && exit 0

    return 0
}

case "$env" in
    dev|development)
        enable=development
        disable=production
        ;;
    prod|production)
        enable=production
        disable=development
        ;;
    status)
        env_status
        exit $?
        ;;
    *)
        env_status

        end 1 "Usage: $PGM {dev|prod}" | grep --color "$PGM.*
        
Options:
    dev/development  - Switch to development environment
    prod/production  - Switch to production environment
    status          - Show current environment"
esac

log "Switching PHP to $enable environment..."

log Refresh /etc/php/$PHPVER/apache2/conf.d/
sudo rm -f /etc/php/$PHPVER/apache2/conf.d/mod_php-$disable.ini
sudo ln -sf $KAREN_PRESETS/php/$PHPVER/apache2/conf.d/mod_php-common.ini /etc/php/$PHPVER/apache2/conf.d/
sudo ln -sf $KAREN_PRESETS/php/$PHPVER/apache2/conf.d/mod_php-$enable.ini /etc/php/$PHPVER/apache2/conf.d/

log Refresh php-fpm configs /etc/php/$PHPVER/fpm/conf.d/
ls $KAREN_PRESETS/php/$PHPVER/fpm/conf.d/*.ini \
&& sudo ln -sf $KAREN_PRESETS/php/$PHPVER/fpm/conf.d/*.ini /etc/php/$PHPVER/fpm/conf.d/ \
|| exit $?

$KAREN_BIN/generate-caddy-pools $env || end $? Could not execute generate-caddy-pools

# OK BUT NOT YET
# Setup systemd drop-in for pool generation
# sudo mkdir -p /etc/systemd/system/$service.d/
# if [ -f $MASTER/systemd/system/$service.d/caddy-pools.conf ]; then
#     sudo ln -sf $MASTER/systemd/system/$service.d/caddy-pools.conf /etc/systemd/system/$service.d/
#     sudo systemctl daemon-reload
# fi

sudo systemctl $mode $service --no-pager || end $? "$(systemctl status $service --no-pager 2>&1)"

log $service ${mode}ed

env_status
