#!/bin/bash

# DEBUG=yes

PGM=$(basename $0)
TMP=/tmp/$PGM.$$
LOCK=~/.$PGM

trap "rm -f $TMP $TMP.*" EXIT
PATH=$(dirname "$0"):$PATH
. $(which helpers) || exit 1

[ ! "$LOCALNS" ] && LOCALNS=@8.8.8.8
echo "$1" | grep -q "^@" && LOCALNS=$1

ls /etc/apache2/sites-enabled/mail.*conf > $TMP.confs || end $? no mail website
apacheconf=$(realpath $(grep -v le-ssl $TMP.confs))
sslconf=$(realpath $(grep le-ssl $TMP.confs))
ls $apacheconf >/dev/null || end $?
log Apache conf $apacheconf
ip=$(hostname -I | cut -d " " -f 1)
log this ip $ip
ipmatch=$(hostname -I | sed -E "s/ +$//" | tr " " "|")
hostname=$(hostname -f)
ipmatch="$hostname|$ipmatch"
log hostname $hostname
log ip match $ipmatch
checkdns=$hostname
while echo "$checkdns" | grep -q "\."
do
  ns=$(dig $LOCALNS +short -t soa $checkdns | cut -d " " -f 1)
  [ "$ns" ] && break
  checkdns=$(echo $checkdns | sed "s/[^\.]*\.//")
done
[ "$ns" ] || end $? could not guess name server
log using name server $ns
ssh root@$ns "egrep '^[^;]*[[:blank:]](MX|A|CNAME)[[:blank:]].*' /etc/bind/zones/*.zone | egrep '$ipmatch'" | sed -e "s:.*/::" -e "s/\.zone:/:/" > $TMP.ns.zones

grep MX $TMP.ns.zones | sed -E "s/:.*[[:blank:]]MX[[:blank:]]([0-9]+[[:blank:]])?.*//" > $TMP.mx
grep :mail $TMP.ns.zones | sed -E "s/^(.*):[[:blank:]]*(mail[a-z\.]*)[[:blank:]].*/\\2.\\1/" > $TMP.mail

# check missing postfix conf files
cat $TMP.mx | while read domain
do
  [ -e /etc/postfix/virtual.d/$domain ] && continue
  mx="$(dig $LOCALNS +short MX $domain | sed -e "s/^[0-9 ]*//" -e "s/\.$//" | while read host; do echo $host; dig +short $host | tail -1; done)"
  echo "$mx" | egrep -q "^$ipmatch$" && {
    printf "$domain\tOK\n@$domain\tREJECT\n" > /etc/postfix/virtual.d/$domain
    log "missing $domain added to postfix config"
  } || {
    log 1 "$domain MX is $(echo $mx) but still configured here in name server config"
    continue
  }
  ### do some stuff here
done

ls /etc/postfix/virtual.d/*.* | grep -v "[~#]" | while read file
do
  domain=$(basename $file)
  grep -q "^$domain" $TMP.mx && continue
  mx="$(dig $LOCALNS +short MX $domain | sed -e "s/^[0-9 ]*//" -e "s/\.$//" | while read host; do dig +short $host; done)"
  echo "$mx" | egrep -q "^$ipmatch$" && {
    log "$domain belongs here ($(echo $mx)) but was not found in name server config" && continue
  } || {
    log "$domain MX is $(echo $mx), should not be here"
  }
done
end

# add missing mail.* hosts
cat $TMP.mx | sed "s/^/mail./" | while read mail
do
  grep -q "^$mail$" $TMP.mail && continue
  dig +short $mail | tail -1 | grep -E "^($ipmatch)$" || continue
  echo $mail
done >> $TMP.mail

# add current apache conf to mail hosts
for host in $(egrep -E "^[; ]*Server(Name|Alias)[[:blank:]]" $apacheconf | tr ';' ' ')
do
  echo "$host" | egrep -v 'Server(Name|Alias)' | grep -v '\.conf$'
done | while read host
do
  grep -q "^$host$" $TMP.mail && continue
  echo $host >> $TMP.mail
done

signature="conf generated by $PGM"

# Generate new apache conf
grep -B9999 ServerName $apacheconf | egrep -v "ServerName|$signature" > $TMP.apacheconf
echo >> $TMP.apacheconf
echo "# Begin $signature $(date)" >> $TMP.apacheconf
egrep -E "^[;# ]*ServerName[[:blank:]]" $apacheconf >> $TMP.apacheconf

cat $TMP.mail | sort -u | while read alias
do
  # echo $alias $(dig +short $alias | egrep -E "^($ipmatch)\.?$")
  dig +short $alias | egrep -E -q "^($ipmatch)\.?$" || continue
  grep -q -E "^[^;#]*Server(Name|Alias)[[:blank:]]+$alias[[:blank:]]*$" $TMP.apacheconf && continue
  echo "  ServerAlias $alias" >> $TMP.apacheconf
done
echo "# End $signature $PGM" >> $TMP.apacheconf
grep -A9999 ServerAlias $apacheconf | egrep -v "Server(Name|Alias)|$signature" >> $TMP.apacheconf

cat $apacheconf | egrep "^[^;#]*Server(Name|Alias)[[:blank:]]" | sort -u > $TMP.before
cat $TMP.apacheconf | egrep "^[^;#]*Server(Name|Alias)[[:blank:]]" | sort -u > $TMP.after
log hosts before update $(cat $TMP.before | wc -l)
log hosts  after update $(cat $TMP.after | wc -l)
diff $TMP.before $TMP.after && log no update needed || {
  cp $TMP.apacheconf $apacheconf
  log $apacheconf udpated, reloading apache2
}
service apache2 reload || end $? error reloading apache
diff $TMP.before $TMP.after || {
  log updating certificates
  ssl-update-apache-certbot $apacheconf || end $?
}
SSLCertificateFile=$(grep "^[^#]*SSLCertificateFile" $sslconf | cut -d ' ' -f 2)
log "Certificate file $SSLCertificateFile"
SSLCertificateKeyFile=$(grep "^[^#]*SSLCertificateKeyFile" $sslconf | cut -d ' ' -f 2)
log "Certificate key  $SSLCertificateKeyFile"

doveconf=$(grep -l '^[^#]*ssl_cert *= *< */etc/letsencrypt/' /etc/dovecot/*.conf /etc/dovecot/conf.d/*.conf)
if [ "$doveconf" ]
then
  log "Updating Dovecot conf $doveconf"
  sed -e "s:^[^#]*ssl_cert *= *<.*:ssl_cert = <$SSLCertificateFile:" -e "s:^[^#]*ssl_key *= *<.*:ssl_key = <$SSLCertificateKeyFile:" $doveconf > $TMP.doveconf
  diff $doveconf $TMP.doveconf || cp $TMP.doveconf $doveconf
  service dovecot restart && log dovecot restarted || end $? error restarting dovecot
fi

postfixconf=$(egrep -l "^[^#]*smtpd_tls_(cert|key)?_file *= *" /etc/postfix/*.cf)
if [ "$postfixconf" ]
then
  log "Updating Postfix conf $postfixconf"
  sed \
  -e "s:^[^#]*smtpd_tls_cert_file *=.*:smtpd_tls_cert_file = $SSLCertificateFile:" \
  -e "s:^[^#]*smtpd_tls_key_file *=.*:smtpd_tls_key_file = $SSLCertificateKeyFile:" \
  $postfixconf > $TMP.postfixconf
  diff $postfixconf $TMP.postfixconf || cp $TMP.postfixconf $postfixconf
  service postfix restart && log postfix restarted || end $? error restarting postfix
fi
