#!/bin/bash

echo "## for reference only, sample code copied from 
## https://unix.stackexchange.com/questions/210982/bind-unix-program-to-specific-network-interface"

PGM=$(basename "$0")
[ ! "$2" ] && echo "Usage: $PGM interface command [...]" >&2 && exit 1

if=$1
shift
ifconfig $if >/dev/null || exit $?

cmd="$@"

# Add a new namespace called test_ns
echo sudo ip netns add test_ns || exit $?
sudo ip netns add test_ns || exit $?

# Set test to use $if, after this point $if is not usable by programs
# outside the namespace
echo sudo ip link set $if netns test_ns || exit $?
sudo ip link set $if netns test_ns || exit $?

# Bring up $if inside test_ns
echo sudo ip netns exec test_ns ip link set $if up || exit $?
sudo ip netns exec test_ns ip link set $if up || exit $?

# Use dhcp to get an ipv4 address for $if || exit $?
echo sudo ip netns exec test_ns dhclient $if || exit $?
sudo ip netns exec test_ns dhclient $if || exit $?

# Ping google from inside the namespace
echo ip netns exec test_ns $cmd
ip netns exec test_ns $cmd

exit $?


## Option 2


# Create the $if network namespace
ip netns add $if_ns

# Create the virtual network pair
ip link add v_$ifa type veth peer name v_$ifb

# Move v_$ifa to the $if_ns namespace, the virtual pair is now split
# between two network namespaces.
ip link set v_$ifa netns $if_ns

# Configure the ends of the virtual network pairs
ip netns exec $if_ns ifconfig v_$ifa up {{NAMESPACE_IP}} netmask {{NAMESPACE_NETMASK}}
ifconfig v_$ifb up {{ROOT_NS_IP}} netmask {{ROOT_NS_NETMASK}}

# Setup routing from namespace to root
ip netns exec $if_ns route add default gw {{ROOT_NS_IP}} dev v_$ifa

# Setup IP forwarding
echo 1 > /proc/sys/net/ipv4/ip_forward
iptables -t nat -A POSTROUTING -s {{ROUTE_SOURCE}}/24 -o {{NETWORK_INTERFACE}} -j SNAT --to-source {{ROUTE_TARGET}}

ip netns exec $if_ns fish
ip netns exec eth1_ns fish
